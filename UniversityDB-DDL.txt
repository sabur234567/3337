CREATE TABLE classroom
	(room_id int auto_increment not null,
	 building varchar(15),
	 room_number varchar(7),
	 capacity numeric(4,0),
	 primary key (room_id)
	) Engine=InnoDB;

create table department
	(dept_id int auto_increment not null,
	 dept_name varchar(20), 
	 building varchar(15), 
	 budget numeric(12,2) check (budget > 0),
	 primary key (dept_id)
	) Engine=InnoDB;

create table course
	(course_id varchar(8), 
	 title varchar(50), 
	 dept_id int,
	 credits numeric(2,0) check (credits > 0),
	 primary key (course_id),
// so on the deletion of the dep happens then the courses dep will equal null. EX: DEP. Science but course physics so physics dep gets set to null.
//this below means a deletion of the dep.id is not possible if it has courses that belongs to this dep.
	 foreign key (dept_id) references department (dept_id) on delete set null
	) Engine=InnoDB;

create table instructor
	(inst_id int auto_increment not null, 
	 name varchar(20) not null, 
	 dept_id int, 
	 salary numeric(8,2) check (salary > 0),
	 primary key (inst_id),
	 foreign key (dept_id) references department (dept_id) on delete set null
	) Engine=InnoDB;

create table section
	(course_id varchar(8), 
         sec_id varchar(8),
// self-explanitory below
	 semester varchar(6) check (semester in ('Fall', 'Spring', 'Summer')), 
	 year numeric(4,0) check (year > 1701 and year < 2100), 
	 room_id int,
	 time_slot_id varchar(4),
	 primary key (course_id, sec_id, semester, year),
//delete cascade is the most dangerous, bc if a course gets deleted then everything in this table gets deleted that belonged to that course.
	 foreign key (course_id) references course (course_id) on delete cascade,
	 foreign key (room_id) references classroom (room_id) on delete set null
	) Engine=InnoDB;

create table teaches
	(inst_id int, 
	 course_id varchar(8),
	 sec_id varchar(8), 
	 semester varchar(6),
	 year numeric(4,0),
	 primary key (inst_id, course_id, sec_id, semester, year),
	 foreign key (course_id,sec_id, semester, year) references section (course_id,sec_id, semester, year) on delete cascade,
	 foreign key (inst_id) references instructor (inst_id) on delete cascade
	) Engine=InnoDB;

create table student
	(student_id int auto_increment not null, 
	 name varchar(20) not null, 
	 dept_id int, 
	 tot_cred numeric(3,0) check (tot_cred >= 0),
	 primary key (student_id),
	 foreign key (dept_id) references department (dept_id) on delete set null
	) Engine=InnoDB;

create table takes
	(student_id int, 
	 course_id varchar(8),
	 sec_id varchar(8), 
	 semester varchar(6),
	 year numeric(4,0),
	 grade varchar(2),
	 primary key (student_id, course_id, sec_id, semester, year),
	 foreign key (course_id,sec_id, semester, year) references section (course_id,sec_id, semester, year) on delete cascade,
	 foreign key (student_id) references student (student_id) on delete cascade
	) Engine=InnoDB;

create table advisor
	(student_id int,
	 inst_id int,
	 primary key (student_id, inst_id),
	 foreign key (inst_id) references instructor (inst_id) on delete cascade,
	 foreign key (student_id) references student (student_id) on delete cascade
	) Engine=InnoDB;

create table time_slot
	(time_slot_id varchar(4),
	 day varchar(1),
	 start_hr numeric(2,0) check (start_hr >= 0 and start_hr < 24),
	 start_min numeric(2,0) check (start_min >= 0 and start_min < 60),
	 end_hr numeric(2,0) check (end_hr >= 0 and end_hr < 24),
	 end_min numeric(2,0) check (end_min >= 0 and end_min < 60),
	 primary key (time_slot_id, day, start_hr, start_min)
	) Engine=InnoDB;

create table prereq
	(course_id varchar(8), 
	 prereq_id varchar(8),
	 primary key (course_id, prereq_id),
	 foreign key (course_id) references course (course_id) on delete cascade,
	 foreign key (prereq_id) references course (course_id)
	) Engine=InnoDB;